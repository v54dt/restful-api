/*
 * ECG Restful API
 *
 * TEXT 
 *
 * OpenAPI spec version: 1.0.0-oas3
 * Contact: vincent71497867@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ECGApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/v54dt/ecg_restful/1.0.0/test/login_RPN_list")]
        [ValidateModelState]
        [SwaggerOperation("TestLoginRPNListGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(RPNList), description: "successful operation")]
        public virtual IActionResult TestLoginRPNListGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RPNList));
            string exampleJson = null;
            exampleJson = "{\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"RPN\" : [ {\n    \"UID_RPN\" : 10015,\n    \"Name\" : \"陳小姐\"\n  }, {\n    \"UID_RPN\" : 10015,\n    \"Name\" : \"陳小姐\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<RPNList>(exampleJson)
                        : default(RPNList);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">ID of pet to return</param>
        /// <response code="200">successful operation</response>
        [HttpPost]
        [Route("/v54dt/ecg_restful/1.0.0/test/RPN_device_list/{id}")]
        [ValidateModelState]
        [SwaggerOperation("TestRPNDeviceListIdPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(RPNDeviceList), description: "successful operation")]
        public virtual IActionResult TestRPNDeviceListIdPost([FromRoute][Required]long? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RPNDeviceList));
            string exampleJson = null;
            exampleJson = "{\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"device_list\" : {\n    \"BATT\" : 93,\n    \"UID_Device\" : 20,\n    \"MRN\" : 10015,\n    \"BLE_Name\" : \"ECG-test2\",\n    \"Name\" : \"柯博文\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<RPNDeviceList>(exampleJson)
                        : default(RPNDeviceList);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="UID_RPN">t</param>
        /// <param name="BLE_NAME">t</param>
        /// <param name="MRN">t</param>
        /// <response code="200">t</response>
        [HttpPost]
        [Route("/v54dt/ecg_restful/1.0.0/test/RPN_device_pair/{UID_RPN}/{BLE_NAME}/{MRN}")]
        [ValidateModelState]
        [SwaggerOperation("TestRPNDevicePairUIDRPNBLENAMEMRNPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(RPNDevicePair), description: "t")]
        public virtual IActionResult TestRPNDevicePairUIDRPNBLENAMEMRNPost([FromRoute][Required]string UID_RPN, [FromRoute][Required]string BLE_NAME, [FromRoute][Required]string MRN)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RPNDevicePair));
            string exampleJson = null;
            exampleJson = "{\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"pair_status\" : \"OK\",\n  \"device_info\" : {\n    \"BATT\" : 83,\n    \"UID_Device\" : 10015,\n    \"BLE_NAME\" : \"20\",\n    \"Name\" : \"柯博文\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<RPNDevicePair>(exampleJson)
                        : default(RPNDevicePair);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="BLE_NAME">t</param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v54dt/ecg_restful/1.0.0/test/RPN_device_unpair/{BLE_NAME}")]
        [ValidateModelState]
        [SwaggerOperation("TestRPNDeviceUnpairBLENAMEPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(RPNDeviceUnpair), description: "OK")]
        public virtual IActionResult TestRPNDeviceUnpairBLENAMEPost([FromRoute][Required]string BLE_NAME)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RPNDeviceUnpair));
            string exampleJson = null;
            exampleJson = "{\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"pair_status\" : \"Unpaired\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<RPNDeviceUnpair>(exampleJson)
                        : default(RPNDeviceUnpair);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="uIDDevice">t</param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v54dt/ecg_restful/1.0.0/test/RTECG/{UID_Device}")]
        [ValidateModelState]
        [SwaggerOperation("TestRTECGUIDDevicePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(EcgData), description: "OK")]
        public virtual IActionResult TestRTECGUIDDevicePost([FromRoute][Required]string uIDDevice)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EcgData));
            string exampleJson = null;
            exampleJson = "{\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"L1\" : [ \"\", \"\" ],\n  \"L2\" : [ \"\", \"\" ],\n  \"L3\" : [ \"\", \"\" ],\n  \"L4\" : [ \"\", \"\" ],\n  \"L5\" : [ \"\", \"\" ],\n  \"L6\" : [ \"\", \"\" ],\n  \"L10\" : [ \"\", \"\" ],\n  \"L7\" : [ \"\", \"\" ],\n  \"data_point_amount\" : 4,\n  \"L8\" : [ \"\", \"\" ],\n  \"L12\" : [ \"\", \"\" ],\n  \"L9\" : [ \"\", \"\" ],\n  \"L11\" : [ \"\", \"\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<EcgData>(exampleJson)
                        : default(EcgData);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="uIDDevice">t</param>
        /// <param name="dataStartMs">t</param>
        /// <param name="dateEndMs">t</param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v54dt/ecg_restful/1.0.0/test/SEECG/{UID_Device}/{data_start_ms}/{date_end_ms}")]
        [ValidateModelState]
        [SwaggerOperation("TestSEECGUIDDeviceDataStartMsDateEndMsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(EcgData), description: "OK")]
        public virtual IActionResult TestSEECGUIDDeviceDataStartMsDateEndMsPost([FromRoute][Required]string uIDDevice, [FromRoute][Required]string dataStartMs, [FromRoute][Required]string dateEndMs)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EcgData));
            string exampleJson = null;
            exampleJson = "{\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"L1\" : [ \"\", \"\" ],\n  \"L2\" : [ \"\", \"\" ],\n  \"L3\" : [ \"\", \"\" ],\n  \"L4\" : [ \"\", \"\" ],\n  \"L5\" : [ \"\", \"\" ],\n  \"L6\" : [ \"\", \"\" ],\n  \"L10\" : [ \"\", \"\" ],\n  \"L7\" : [ \"\", \"\" ],\n  \"data_point_amount\" : 4,\n  \"L8\" : [ \"\", \"\" ],\n  \"L12\" : [ \"\", \"\" ],\n  \"L9\" : [ \"\", \"\" ],\n  \"L11\" : [ \"\", \"\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<EcgData>(exampleJson)
                        : default(EcgData);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
